var mongoose=require("mongoose");

var clientSchema=new mongoose.Schema({
	firstName:String,
	lastName:String,
	phone:String,
	medicaidNumber:String,
	birthday:String,
	address:{
		street:String,
		city:String,
		state:String,
		zip:String
	},
	diagnosis:[],
	beaconId:String,
	guardian:String,
	notes:String,
	photo:String,
	deactivationSuperuser:String,
	approvals:
		[{
			number:String,
			startDate:Date,
			endDate:Date,
			units:Number,
			procedure:String,
			availableUnits:Number
		}],
	maladaptativeBehaviors:
		[{
			name:String,
			baseline:String,
			dateCreated:{type:Date,default:Date.now()},
			STOS:[
				{
					value:String,
					duration:String,
					current:Boolean
				}
			],
			measurement:String,
			intensity:String
		}],
	replacementsBehaviors:
		[{
			name:String,
			baseline:String,
			dateCreated:{type:Date,default:Date.now()},
			STOS:[
				{
					value:String,
					duration:String,
					current:Boolean
				}
			],
			measurement:String
		}],
	therapies:
	[{
		name:String,
		schedule:
		[
			{
				day:String,
				timeIn:String,
				timeOut:String
			}
		],

	}],
	haveTherapies:String,
	restrictions:
	[{
		startDate:String,
		endDate:String,
		description:String
	}],
	doctor:
	{
		type:mongoose.Schema.Types.ObjectId,
		ref:"Doctor"
	},
	assistant:
		{
			firstName:{type:String,default:""},
			lastName:{type:String,default:""}
		},
	analyst:
		{
			firstName:{type:String,default:""},
			lastName:{type:String,default:""}
		},
	assistantReports:
		[
			{
				type:mongoose.Schema.Types.ObjectId,
				ref:"Report"
			},

		],
	analystReports:
		[
			{
				type:mongoose.Schema.Types.ObjectId,
				ref:"Report"
			},

		]
	
},
{
	collection: 'clients'
});

module.exports=mongoose.model("Client",clientSchema);
